name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/netflix-api
  KUBERNETES_NAMESPACE: netflix-ml

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Deploy to Kubernetes (Simulation)
      run: |
        echo "=== Deployment Simulation ==="
        echo "Image built: ${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo ""
        echo "In a real environment, we would now:"
        echo "1. kubectl set image deployment/netflix-api netflix-api=${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "2. kubectl rollout status deployment/netflix-api"
        echo ""
        echo "For local Minikube deployment, run:"
        echo "docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "minikube image load ${{ env.IMAGE_NAME }}:${{ github.sha }}"
        echo "kubectl set image deployment/netflix-api netflix-api=${{ env.IMAGE_NAME }}:${{ github.sha }} -n netflix-ml"
    
    - name: Create deployment instructions
      run: |
        cat > deployment-instructions.md << EOF
        # Deployment Instructions
        
        ## Automated Deployment Complete
        
        **Image**: \`${{ env.IMAGE_NAME }}:${{ github.sha }}\`
        **Time**: $(date)
        
        ### To deploy to your local Minikube:
        
        \`\`\`bash
        # Pull the image
        docker pull ${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # Load into Minikube
        minikube image load ${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # Update deployment
        kubectl set image deployment/netflix-api netflix-api=${{ env.IMAGE_NAME }}:${{ github.sha }} -n netflix-ml
        
        # Check status
        kubectl rollout status deployment/netflix-api -n netflix-ml
        \`\`\`
        
        ### To rollback if needed:
        \`\`\`bash
        kubectl rollout undo deployment/netflix-api -n netflix-ml
        \`\`\`
        EOF
        
        cat deployment-instructions.md
    
    - name: Upload deployment instructions
      uses: actions/upload-artifact@v3
      with:
        name: deployment-instructions
        path: deployment-instructions.md